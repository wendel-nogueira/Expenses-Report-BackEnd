// <auto-generated />
using System;
using ExpensesReport.Departaments.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpensesReport.Departaments.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DepartamentsDbContext))]
    [Migration("20231027144232_UpdateUserAndManager")]
    partial class UpdateUserAndManager
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.Departament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Acronym");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("Acronym")
                        .IsUnique();

                    b.ToTable("Departaments");
                });

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DepartamentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ManagerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ManagerId");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DepartamentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.Manager", b =>
                {
                    b.HasOne("ExpensesReport.Departaments.Core.Entities.Departament", "Departament")
                        .WithMany("Managers")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Manager_Departament");

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.User", b =>
                {
                    b.HasOne("ExpensesReport.Departaments.Core.Entities.Departament", "Departament")
                        .WithMany("Users")
                        .HasForeignKey("DepartamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Departament");

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("ExpensesReport.Departaments.Core.Entities.Departament", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
